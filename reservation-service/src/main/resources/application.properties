server.port=8080
server.servlet.context-path=/api
#
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB_NAME:reservationdb}
spring.datasource.username=${POSTGRES_DB_USER:reservationuser}
spring.datasource.password=${POSTGRES_DB_PASSWORD:secret}
#spring.jpa.properties.hibernate.default_schema=reservation
spring.jpa.open-in-view=false
#
spring.kafka.bootstrap-servers=${KAFKA_SERVERS:PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092}
spring.kafka.client-id=reservation-service
spring.kafka.consumer.group-id=reservation-service
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.concurrency=2
spring.kafka.listener.missing-topics-fatal=true
#
kafka.topic.saga.roombooking.inbox.events=room-booking.outbox.events
kafka.topic.saga.payment.inbox.events=payment.outbox.events
